// Code generated by entify, DO NOT EDIT.

package {{.Package}}

import "database/sql"

type {{.Entity.StructName}}Client struct {
	db    *sql.DB
	table string
}

func new{{.Entity.StructName}}Client(db *sql.DB) *{{.Entity.StructName}}Client {
	return &{{.Entity.StructName}}Client{
		db:    db,
		table: "{{.Entity.Name}}",
	}
}

func ({{.Entity.ReceiverVarName}}c *{{.Entity.StructName}}Client) Query() *{{.Entity.StructName}}Query {
	return &{{.Entity.StructName}}Query{
		client: {{.Entity.ReceiverVarName}}c,
	}
}

func ({{.Entity.ReceiverVarName}}c *{{.Entity.StructName}}Client) Create() *{{.Entity.StructName}}Create {
	return &{{.Entity.StructName}}Create{
		mutation: new{{.Entity.StructName}}Mutation({{.Entity.ReceiverVarName}}c, OpCreate),
	}
}

func ({{.Entity.ReceiverVarName}}c *{{.Entity.StructName}}Client) Update() *{{.Entity.StructName}}Update {
	return &{{.Entity.StructName}}Update{
		{{.Entity.StructName}}UpdateOne: &{{.Entity.StructName}}UpdateOne{
			mutation: new{{.Entity.StructName}}Mutation({{.Entity.ReceiverVarName}}c, OpUpdate),
		},
	}
}

func ({{.Entity.ReceiverVarName}}c *{{.Entity.StructName}}Client) UpdateOneID(
{{- range .Entity.PrimaryKeys}}
{{.VariableName}} {{.Type}},
{{- end}}
) *{{.Entity.StructName}}UpdateOne {
	return &{{.Entity.StructName}}UpdateOne{
		mutation: new{{.Entity.StructName}}Mutation({{.Entity.ReceiverVarName}}c, OpUpdateOne, with{{.Entity.StructName}}ID(
            {{- range .Entity.PrimaryKeys}}
            {{.VariableName}},
            {{- end}}
        )),
	}
}

func ({{.Entity.ReceiverVarName}}c *{{.Entity.StructName}}Client) Delete() *{{.Entity.StructName}}Delete {
	return &{{.Entity.StructName}}Delete{
		{{.Entity.StructName}}DeleteOne: &{{.Entity.StructName}}DeleteOne{
			mutation: new{{.Entity.StructName}}Mutation({{.Entity.ReceiverVarName}}c, OpDelete),
		},
	}
}

func ({{.Entity.ReceiverVarName}}c *{{.Entity.StructName}}Client) DeleteOneID(
{{- range .Entity.PrimaryKeys}}
{{.VariableName}} {{.Type}},
{{- end}}
) *{{.Entity.StructName}}DeleteOne {
	return &{{.Entity.StructName}}DeleteOne{
		mutation: new{{.Entity.StructName}}Mutation({{.Entity.ReceiverVarName}}c, OpDeleteOne, with{{.Entity.StructName}}ID(
            {{- range .Entity.PrimaryKeys}}
            {{.VariableName}},
            {{- end}}
        )),
	}
}
