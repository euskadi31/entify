// Code generated by entify, DO NOT EDIT.

package {{.Package}}

import (
    "database/sql"
    "errors"
)


var (
	ErrBadOperation = errors.New("bad operation")
)

// An Op represents a mutation operation.
type Op uint

// Mutation operations.
const (
	OpCreate    Op = 1 << iota // node creation.
	OpUpdate                   // update nodes by predicate (if any).
	OpUpdateOne                // update one node.
	OpDelete                   // delete nodes by predicate (if any).
	OpDeleteOne                // delete one one.
)

// Is reports whether o is match the given operation.
func (i Op) Is(o Op) bool {
    return i&o != 0
}

//go:generate go run golang.org/x/tools/cmd/stringer -type Op

type Client struct {
	db *sql.DB

    {{- range .Entities}}
    {{.StructName}} * {{.StructName}}Client
    {{- end}}
}

func NewClient(db *sql.DB) *Client {
	return &Client{
		db:   db,
        {{- range .Entities}}
        {{.StructName}}: new{{.StructName}}Client(db),
        {{- end}}
	}
}
